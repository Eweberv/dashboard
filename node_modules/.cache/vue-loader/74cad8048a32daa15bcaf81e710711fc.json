{"remainingRequest":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/victor/delivery/learn/vue_test/open-classroom/src/components/ServiceList.vue?vue&type=style&index=0&id=e861d51a&scoped=true&lang=css&","dependencies":[{"path":"/home/victor/delivery/learn/vue_test/open-classroom/src/components/ServiceList.vue","mtime":1581991930879},{"path":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNjbGllbnRDYXJkIHRkLCAjY2xpZW50Q2FyZCB0aCB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwogICAgcGFkZGluZzogOHB4Owp9Cgo="},{"version":3,"sources":["ServiceList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA;AACA;AACA","file":"ServiceList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div>\n            <v-select v-model=\"selected\" :items=\"widgets\" item-text=\"name\" label=\"select a widget\" return-object></v-select>\n            <v-btn v-on:click=\"addToCard()\">Add</v-btn>\n            <v-btn v-on:click=\"clearCard()\">Clear</v-btn>\n\n            <!--<p>selected value: {{selected}}</p>-->\n\n            <div v-for=\"(elem, index) in card\" v-bind:key=\"index\">\n                <div v-if=\"elem.name === 'Meteo'\">\n                    <MeteoService :widget-id=\"index\"></MeteoService>\n                </div>\n                <div v-if=\"elem.name === 'Steam: players in game'\">\n                    <SteamServicePlayerNb :widget-id=\"index\"></SteamServicePlayerNb>\n                </div>\n                <div v-if=\"elem.name === 'Steam: achievements stats for game'\">\n                    <p>todo: component achievements stats for a game (copy from playernb service)</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!--<p>Your card</p>\n     <p v-if=\"card.length === 0\"> Your card is empty, you can add items with the dropdown above</p>\n     <div v-if=\"card.length !== 0\">\n         <div id=\"container\">\n             <table id=\"clientCard\">\n                 <tr>\n                     <th>Fruit</th>\n                     <th>Price</th>\n                 </tr>\n                 <tr v-for=\"(elem, index) in card\" v-bind:key=\"'name' + index\">\n                     <td>{{elem.name}}</td>\n                     <td>{{elem.cost}}</td>\n                 </tr>\n\n                 <tr>\n                 </tr>\n             </table>\n         </div>\n     </div>-->\n</template>\n\n<script>\n    import MeteoService from './MeteoService'\n    import SteamServicePlayerNb from \"./SteamServicePlayerNb\";\n\n    export default {\n        name: \"Shopping list\",\n        components: {SteamServicePlayerNb, MeteoService},\n        data: () => ({\n            widgets: [\n                {\n                    name: 'Meteo',\n                },\n                {\n                    name: 'Steam: players in game',\n                },\n                {\n                    name: 'Steam: achievements stats for game',\n                },\n            ],\n            selected: [],\n            card: [],\n        }),\n        methods: {\n            addToCard() {\n                this.card.push(this.selected)\n            },\n            clearCard() {\n                this.card = [];\n            },\n            removeChildWidget(widgetIndex) {\n                console.log(\"remove at pos: \" + widgetIndex);\n                this.card.splice(widgetIndex, 1);\n            }\n        },\n    }\n</script>\n\n<style scoped>\n\n    #clientCard td, #clientCard th {\n        border: 1px solid #ddd;\n        padding: 8px;\n    }\n\n</style>"]}]}
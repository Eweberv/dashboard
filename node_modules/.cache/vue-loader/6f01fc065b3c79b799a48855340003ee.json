{"remainingRequest":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/victor/delivery/learn/vue_test/open-classroom/src/components/Shopping list.vue?vue&type=style&index=0&id=366b8d54&scoped=true&lang=css&","dependencies":[{"path":"/home/victor/delivery/learn/vue_test/open-classroom/src/components/Shopping list.vue","mtime":1581686022684},{"path":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNjbGllbnRDYXJkIHRkLCAjY2xpZW50Q2FyZCB0aCB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwogICAgcGFkZGluZzogOHB4Owp9Cgo="},{"version":3,"sources":["Shopping list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA","file":"Shopping list.vue","sourceRoot":"src/components","sourcesContent":["<template>\n        <div>\n        <div class=\"shopping-list\">\n            Available food\n        </div>\n        <div>\n            <v-select v-model=\"selected\" :items=\"widgets\" item-text=\"name\" label=\"select a widget\" return-object></v-select>\n            <v-btn v-on:click=\"addToCard()\">Add</v-btn>\n            <v-btn v-on:click=\"clearCard()\">Clear</v-btn>\n\n            <!--<p>selected value: {{selected}}</p>-->\n\n            <div v-if=\"card.length !== 0\">\n            <v-data-table\n                    :headers=\"tableHeader\"\n                    :items=\"card\"\n                    :items-per-page=\"-1\"\n                    class=\"elevation-1\"\n            ></v-data-table>\n            <p>Total cost: {{totalCost()}}</p>\n            </div>\n            <!--<p>Your card</p>\n             <p v-if=\"card.length === 0\"> Your card is empty, you can add items with the dropdown above</p>\n             <div v-if=\"card.length !== 0\">\n                 <div id=\"container\">\n                     <table id=\"clientCard\">\n                         <tr>\n                             <th>Fruit</th>\n                             <th>Price</th>\n                         </tr>\n                         <tr v-for=\"(elem, index) in card\" v-bind:key=\"'name' + index\">\n                             <td>{{elem.name}}</td>\n                             <td>{{elem.cost}}</td>\n                         </tr>\n\n                         <tr>\n                         </tr>\n                     </table>\n                 </div>\n             </div>-->\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"Shopping list\",\n        data: () => ({\n            tableHeader: [\n                {\n                    text: 'Fruit',\n                    align: 'left',\n                    sortable: false,\n                    value: 'name',\n                },\n                { text: 'Cost', value: 'cost' }\n                ],\n            widgets: [\n                {\n                    name: 'widget 1',\n                    cost: 5\n                },\n                {\n                    name: 'widget 2',\n                    cost: 10\n                },\n                {\n                    name: 'widget 3',\n                    cost: 15\n                }\n            ],\n            selected: [],\n            card: [],\n        }),\n        methods: {\n            totalCost() {\n                let total = 0;\n                for (let item of this.card) {\n                    total += item.cost\n                }\n                return (total);\n            },\n            addToCard() {\n                this.card.push(this.selected)\n            },\n            clearCard() {\n                this.card = [];\n            }\n        },\n        mounted() {\n          axios\n        },\n    }\n</script>\n\n<style scoped>\n\n    #clientCard td, #clientCard th {\n        border: 1px solid #ddd;\n        padding: 8px;\n    }\n\n</style>"]}]}
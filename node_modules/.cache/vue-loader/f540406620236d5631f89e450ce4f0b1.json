{"remainingRequest":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/victor/delivery/learn/vue_test/open-classroom/src/components/Shopping list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/victor/delivery/learn/vue_test/open-classroom/src/components/Shopping list.vue","mtime":1581534862682},{"path":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/victor/delivery/learn/vue_test/open-classroom/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJTaG9wcGluZyBsaXN0IiwKICAgIGRhdGE6ICgpID0+ICh7CiAgICAgICAgZnJ1aXRzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIG5hbWU6ICdiYW5hbmUnLAogICAgICAgICAgICAgICAgY29zdDogNQogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBuYW1lOiAncG9tbWUnLAogICAgICAgICAgICAgICAgY29zdDogMTAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgbmFtZTogJ2FuYW5hcycsCiAgICAgICAgICAgICAgICBjb3N0OiAxNQogICAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICBzZWxlY3RlZDogImNob29zZWVlZWUiLAogICAgICAgIGNhcmQ6IFtdLAogICAgfSksCiAgICBtZXRob2RzOiB7CiAgICAgICAgdG90YWxDb3N0KCkgewogICAgICAgICAgICBsZXQgdG90YWwgPSAwOwogICAgICAgICAgICBmb3IgKGxldCBpdGVtIG9mIHRoaXMuY2FyZCkgewogICAgICAgICAgICAgICAgdG90YWwgKz0gaXRlbS5jb3N0CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuICh0b3RhbCk7CiAgICAgICAgfSwKICAgICAgICBhZGRUb0NhcmQoKSB7CiAgICAgICAgICAgIHRoaXMuY2FyZC5wdXNoKHRoaXMuc2VsZWN0ZWQpCiAgICAgICAgfSwKICAgICAgICBjbGVhckNhcmQoKSB7CiAgICAgICAgICAgIHRoaXMuY2FyZCA9IFtdOwogICAgICAgIH0KICAgIH0sCn0K"},{"version":3,"sources":["Shopping list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Shopping list.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div class=\"shopping-list\">\n            Available food\n        </div>\n        <div>\n            <v-select v-model=\"selected\" :options=\"[hello, canada, coucou]\">\n            </v-select>\n            <button v-on:click=\"addToCard()\">Add to card</button>\n            <button v-on:click=\"clearCard()\">Clear card</button>\n\n            <p>Your card</p>\n            <p v-if=\"card.length === 0\"> Your card is empty, you can add items with the dropdown above</p>\n            <div v-if=\"card.length !== 0\">\n                <div id=\"container\">\n                    <table id=\"clientCard\">\n                        <tr>\n                            <th>Fruit</th>\n                            <th>Price</th>\n                        </tr>\n                        <tr v-for=\"(elem, index) in card\" v-bind:key=\"'name' + index\">\n                            <td>{{elem.name}}</td>\n                            <td>{{elem.cost}}</td>\n                        </tr>\n                        <tr>\n                            <td>Total cost: {{totalCost()}}</td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"Shopping list\",\n        data: () => ({\n            fruits: [\n                {\n                    name: 'banane',\n                    cost: 5\n                },\n                {\n                    name: 'pomme',\n                    cost: 10\n                },\n                {\n                    name: 'ananas',\n                    cost: 15\n                }\n            ],\n            selected: \"chooseeeee\",\n            card: [],\n        }),\n        methods: {\n            totalCost() {\n                let total = 0;\n                for (let item of this.card) {\n                    total += item.cost\n                }\n                return (total);\n            },\n            addToCard() {\n                this.card.push(this.selected)\n            },\n            clearCard() {\n                this.card = [];\n            }\n        },\n    }\n</script>\n\n<style scoped>\n\n    #clientCard td, #clientCard th {\n        border: 1px solid #ddd;\n        padding: 8px;\n    }\n\n</style>"]}]}